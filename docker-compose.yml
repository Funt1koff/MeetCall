services:

  zipkin-service:
    build:
      context: ./zipkin-service
      dockerfile: Dockerfile
    container_name: zipkin-service
    ports:
      - "9411:9411"
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://zipkin-service:9412/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      eureka-service:
        condition: service_healthy
      config-service:
        condition: service_healthy

  eureka-service:
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    container_name: eureka-service
    ports:
      - "8761:8761"
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-service:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  config-service:
    build:
      context: ./config-service
      dockerfile: Dockerfile
    container_name: config-service
    ports:
      - "8888:8888"
    volumes:
      - ./config-service/config:/app/config
    depends_on:
      eureka-service:
        condition: service_healthy
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://config-service:8888/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    container_name: gateway-service
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-service:8761/eureka
      CONFIG_URI: http://config-service:8888
    depends_on:
      keycloak-postgres:
        condition: service_started
      keycloak:
        condition: service_started
      user-service:
        condition: service_started
    networks:
      - internal

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "9090:9090"
    environment:
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-service:8761/eureka
      CONFIG_URI: http://config-service:8888
    depends_on:
      config-service:
        condition: service_healthy
      eureka-service:
        condition: service_healthy
      user-postgres:
        condition: service_started
      kafka:
        condition: service_started
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://user-service:9090/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  user-postgres:
    image: postgres:15
    container_name: user-postgres
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
    ports:
      - "5432:5432"
    volumes:
      - user_pgdata:/var/lib/postgresql/data
    networks:
      - internal

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - internal

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - internal

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    command: start-dev #start for production
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    ports:
      - "8081:8081"
    depends_on:
      - keycloak-postgres
    networks:
      - internal

  keycloak-postgres:
    image: postgres:15
    container_name: keycloak-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  user_pgdata:
  keycloak_pgdata:
