services:

  user-postgres:
    image: postgres:15
    container_name: meetcall_users_db
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
    volumes:
      - user_pgdata:/var/lib/postgresql/data
    networks:
      - internal

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: meetcall_keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-postgres
    networks:
      - internal

  keycloak-postgres:
    image: postgres:15
    container_name: meetcall_keycloak_db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data
    networks:
      - internal

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: meetcall_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - internal

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: meetcall_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - internal

  config-server:
    build: ./config-server
    ports:
      - "8888:8888"
    networks:
      - internal

volumes:
  user_pgdata:
  keycloak_pgdata:

networks:
  internal:
    driver: bridge
